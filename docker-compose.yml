version: '3.7'

services:
  user-mongo-db:
    container_name: user-mongo-db
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - ./data/docker-entrypoint-initdb.d/mongo-user-init.sh:/docker-entrypoint-initdb.d/mongo-user-init.sh
      - user-mongo-db:/data/db
      - user-mongo-config:/data/configdb
    networks:
      - user-network
    env_file:
      - .env.dev
    restart:
      on-failure
    environment:
      MONGO_INITDB_DATABASE: ${DEFAULT_MONGO_INITDB_ROOT_DB}
      MONGO_INITDB_ROOT_USERNAME: ${DEFAULT_MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DEFAULT_MONGO_INITDB_ROOT_PASSWORD}
      USER_SERVICE_MONGO_DATABASE_NAME: ${USER_SERVICE_MONGO_DATABASE_NAME}
      USER_SERVICE_MONGO_DATABASE_USER: ${USER_SERVICE_MONGO_DATABASE_USER}
      USER_SERVICE_MONGO_DATABASE_PASSWORD: ${USER_SERVICE_MONGO_DATABASE_PASSWORD}

  user-service:
    container_name: user-service
    build:
      context: ./user-service
      args:
        ENV_PROFILE: ${USER_SERVICE_ENV_PROFILE}
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    networks:
      - user-network
    restart:
      on-failure
    depends_on:
      - user-mongo-db
    env_file:
      - .env.dev
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://${USER_SERVICE_MONGO_DATABASE_USER}:${USER_SERVICE_MONGO_DATABASE_PASSWORD}@user-mongo-db
      SPRING_DATA_MONGODB_DATABASE: ${USER_SERVICE_MONGO_DATABASE_NAME}
      SPRING_DATA_MONGODB_AUTHENTICATION-DATABASE: ${DEFAULT_MONGO_INITDB_ROOT_DB}

  expense-mongo-db:
    container_name: expense-mongo-db
    image: mongo:latest
    ports:
      - "27018:27017"
    volumes:
      - ./data/docker-entrypoint-initdb.d/mongo-expense-init.sh:/docker-entrypoint-initdb.d/mongo-expense-init.sh
      - expense-mongo-db:/data/db
      - expense-mongo-config:/data/configdb
    networks:
      - expense-network
    env_file:
      - .env.dev
    restart:
      on-failure
    environment:
      MONGO_INITDB_DATABASE: ${DEFAULT_MONGO_INITDB_ROOT_DB}
      MONGO_INITDB_ROOT_USERNAME: ${DEFAULT_MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DEFAULT_MONGO_INITDB_ROOT_PASSWORD}
      EXPENSE_SERVICE_MONGO_DATABASE_NAME: ${EXPENSE_SERVICE_MONGO_DATABASE_NAME}
      EXPENSE_SERVICE_MONGO_DATABASE_USER: ${EXPENSE_SERVICE_MONGO_DATABASE_USER}
      EXPENSE_SERVICE_MONGO_DATABASE_PASSWORD: ${EXPENSE_SERVICE_MONGO_DATABASE_PASSWORD}

  expense-service:
    container_name: expense-service
    build:
      context: ./expense-service
      args:
        ENV_PROFILE: ${EXPENSE_SERVICE_ENV_PROFILE}
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    networks:
      - expense-network
    restart:
      on-failure
    depends_on:
      - expense-mongo-db
    env_file:
      - .env.dev
    environment:
      EXPENSE_LIMIT: ${EXPENSE_SERVICE_LIMIT}
      SPRING_DATA_MONGODB_URI: mongodb://${EXPENSE_SERVICE_MONGO_DATABASE_USER}:${EXPENSE_SERVICE_MONGO_DATABASE_PASSWORD}@expense-mongo-db
      SPRING_DATA_MONGODB_DATABASE: ${EXPENSE_SERVICE_MONGO_DATABASE_NAME}
      SPRING_DATA_MONGODB_AUTHENTICATION-DATABASE: ${DEFAULT_MONGO_INITDB_ROOT_DB}

  invoice-mongo-db:
    container_name: invoice-mongo-db
    image: mongo:latest
    ports:
      - "27019:27017"
    volumes:
      - ./data/docker-entrypoint-initdb.d/mongo-invoice-init.sh:/docker-entrypoint-initdb.d/mongo-invoice-init.sh
      - invoice-mongo-db:/data/db
      - invoice-mongo-config:/data/configdb
    networks:
      - invoice-network
    env_file:
      - .env.dev
    restart:
      on-failure
    environment:
      MONGO_INITDB_DATABASE: ${DEFAULT_MONGO_INITDB_ROOT_DB}
      MONGO_INITDB_ROOT_USERNAME: ${DEFAULT_MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DEFAULT_MONGO_INITDB_ROOT_PASSWORD}
      INVOICE_SERVICE_MONGO_DATABASE_NAME: ${INVOICE_SERVICE_MONGO_DATABASE_NAME}
      INVOICE_SERVICE_MONGO_DATABASE_USER: ${INVOICE_SERVICE_MONGO_DATABASE_USER}
      INVOICE_SERVICE_MONGO_DATABASE_PASSWORD: ${INVOICE_SERVICE_MONGO_DATABASE_PASSWORD}


volumes:
  user-mongo-db:
  user-mongo-config:
  expense-mongo-db:
  expense-mongo-config:
  invoice-mongo-db:
  invoice-mongo-config:

networks:
  user-network:
  expense-network:
  invoice-network: